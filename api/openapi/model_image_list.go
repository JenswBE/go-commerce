/*
GoCommerce

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ImageList struct for ImageList
type ImageList struct {
	Images []Image `json:"images"`
}

// NewImageList instantiates a new ImageList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageList(images []Image) *ImageList {
	this := ImageList{}
	this.Images = images
	return &this
}

// NewImageListWithDefaults instantiates a new ImageList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageListWithDefaults() *ImageList {
	this := ImageList{}
	return &this
}

// GetImages returns the Images field value
func (o *ImageList) GetImages() []Image {
	if o == nil {
		var ret []Image
		return ret
	}

	return o.Images
}

// GetImagesOk returns a tuple with the Images field value
// and a boolean to check if the value has been set.
func (o *ImageList) GetImagesOk() ([]Image, bool) {
	if o == nil {
		return nil, false
	}
	return o.Images, true
}

// SetImages sets field value
func (o *ImageList) SetImages(v []Image) {
	o.Images = v
}

func (o ImageList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["images"] = o.Images
	}
	return json.Marshal(toSerialize)
}

type NullableImageList struct {
	value *ImageList
	isSet bool
}

func (v NullableImageList) Get() *ImageList {
	return v.value
}

func (v *NullableImageList) Set(val *ImageList) {
	v.value = val
	v.isSet = true
}

func (v NullableImageList) IsSet() bool {
	return v.isSet
}

func (v *NullableImageList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageList(val *ImageList) *NullableImageList {
	return &NullableImageList{value: val, isSet: true}
}

func (v NullableImageList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


