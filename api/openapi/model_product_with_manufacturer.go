/*
 * GoCommerce
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ProductWithManufacturer struct for ProductWithManufacturer
type ProductWithManufacturer struct {
	// Compressed representation of ID
	Id *string `json:"id,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	Name *string `json:"name,omitempty"`
	DescriptionShort *string `json:"description_short,omitempty"`
	DescriptionLong *string `json:"description_long,omitempty"`
	// Price in cents
	Price *int64 `json:"price,omitempty"`
	CategoryIds *[]string `json:"category_ids,omitempty"`
	ManufacturerId *string `json:"manufacturer_id,omitempty"`
	Status *string `json:"status,omitempty"`
	StockCount *int64 `json:"stock_count,omitempty"`
	ImageUrls *[]string `json:"image_urls,omitempty"`
	Manufacturer *Manufacturer `json:"manufacturer,omitempty"`
}

// NewProductWithManufacturer instantiates a new ProductWithManufacturer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductWithManufacturer() *ProductWithManufacturer {
	this := ProductWithManufacturer{}
	return &this
}

// NewProductWithManufacturerWithDefaults instantiates a new ProductWithManufacturer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductWithManufacturerWithDefaults() *ProductWithManufacturer {
	this := ProductWithManufacturer{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProductWithManufacturer) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWithManufacturer) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProductWithManufacturer) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProductWithManufacturer) SetId(v string) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ProductWithManufacturer) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWithManufacturer) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ProductWithManufacturer) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ProductWithManufacturer) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ProductWithManufacturer) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWithManufacturer) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ProductWithManufacturer) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ProductWithManufacturer) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProductWithManufacturer) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWithManufacturer) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProductWithManufacturer) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProductWithManufacturer) SetName(v string) {
	o.Name = &v
}

// GetDescriptionShort returns the DescriptionShort field value if set, zero value otherwise.
func (o *ProductWithManufacturer) GetDescriptionShort() string {
	if o == nil || o.DescriptionShort == nil {
		var ret string
		return ret
	}
	return *o.DescriptionShort
}

// GetDescriptionShortOk returns a tuple with the DescriptionShort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWithManufacturer) GetDescriptionShortOk() (*string, bool) {
	if o == nil || o.DescriptionShort == nil {
		return nil, false
	}
	return o.DescriptionShort, true
}

// HasDescriptionShort returns a boolean if a field has been set.
func (o *ProductWithManufacturer) HasDescriptionShort() bool {
	if o != nil && o.DescriptionShort != nil {
		return true
	}

	return false
}

// SetDescriptionShort gets a reference to the given string and assigns it to the DescriptionShort field.
func (o *ProductWithManufacturer) SetDescriptionShort(v string) {
	o.DescriptionShort = &v
}

// GetDescriptionLong returns the DescriptionLong field value if set, zero value otherwise.
func (o *ProductWithManufacturer) GetDescriptionLong() string {
	if o == nil || o.DescriptionLong == nil {
		var ret string
		return ret
	}
	return *o.DescriptionLong
}

// GetDescriptionLongOk returns a tuple with the DescriptionLong field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWithManufacturer) GetDescriptionLongOk() (*string, bool) {
	if o == nil || o.DescriptionLong == nil {
		return nil, false
	}
	return o.DescriptionLong, true
}

// HasDescriptionLong returns a boolean if a field has been set.
func (o *ProductWithManufacturer) HasDescriptionLong() bool {
	if o != nil && o.DescriptionLong != nil {
		return true
	}

	return false
}

// SetDescriptionLong gets a reference to the given string and assigns it to the DescriptionLong field.
func (o *ProductWithManufacturer) SetDescriptionLong(v string) {
	o.DescriptionLong = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ProductWithManufacturer) GetPrice() int64 {
	if o == nil || o.Price == nil {
		var ret int64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWithManufacturer) GetPriceOk() (*int64, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ProductWithManufacturer) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given int64 and assigns it to the Price field.
func (o *ProductWithManufacturer) SetPrice(v int64) {
	o.Price = &v
}

// GetCategoryIds returns the CategoryIds field value if set, zero value otherwise.
func (o *ProductWithManufacturer) GetCategoryIds() []string {
	if o == nil || o.CategoryIds == nil {
		var ret []string
		return ret
	}
	return *o.CategoryIds
}

// GetCategoryIdsOk returns a tuple with the CategoryIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWithManufacturer) GetCategoryIdsOk() (*[]string, bool) {
	if o == nil || o.CategoryIds == nil {
		return nil, false
	}
	return o.CategoryIds, true
}

// HasCategoryIds returns a boolean if a field has been set.
func (o *ProductWithManufacturer) HasCategoryIds() bool {
	if o != nil && o.CategoryIds != nil {
		return true
	}

	return false
}

// SetCategoryIds gets a reference to the given []string and assigns it to the CategoryIds field.
func (o *ProductWithManufacturer) SetCategoryIds(v []string) {
	o.CategoryIds = &v
}

// GetManufacturerId returns the ManufacturerId field value if set, zero value otherwise.
func (o *ProductWithManufacturer) GetManufacturerId() string {
	if o == nil || o.ManufacturerId == nil {
		var ret string
		return ret
	}
	return *o.ManufacturerId
}

// GetManufacturerIdOk returns a tuple with the ManufacturerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWithManufacturer) GetManufacturerIdOk() (*string, bool) {
	if o == nil || o.ManufacturerId == nil {
		return nil, false
	}
	return o.ManufacturerId, true
}

// HasManufacturerId returns a boolean if a field has been set.
func (o *ProductWithManufacturer) HasManufacturerId() bool {
	if o != nil && o.ManufacturerId != nil {
		return true
	}

	return false
}

// SetManufacturerId gets a reference to the given string and assigns it to the ManufacturerId field.
func (o *ProductWithManufacturer) SetManufacturerId(v string) {
	o.ManufacturerId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ProductWithManufacturer) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWithManufacturer) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ProductWithManufacturer) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ProductWithManufacturer) SetStatus(v string) {
	o.Status = &v
}

// GetStockCount returns the StockCount field value if set, zero value otherwise.
func (o *ProductWithManufacturer) GetStockCount() int64 {
	if o == nil || o.StockCount == nil {
		var ret int64
		return ret
	}
	return *o.StockCount
}

// GetStockCountOk returns a tuple with the StockCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWithManufacturer) GetStockCountOk() (*int64, bool) {
	if o == nil || o.StockCount == nil {
		return nil, false
	}
	return o.StockCount, true
}

// HasStockCount returns a boolean if a field has been set.
func (o *ProductWithManufacturer) HasStockCount() bool {
	if o != nil && o.StockCount != nil {
		return true
	}

	return false
}

// SetStockCount gets a reference to the given int64 and assigns it to the StockCount field.
func (o *ProductWithManufacturer) SetStockCount(v int64) {
	o.StockCount = &v
}

// GetImageUrls returns the ImageUrls field value if set, zero value otherwise.
func (o *ProductWithManufacturer) GetImageUrls() []string {
	if o == nil || o.ImageUrls == nil {
		var ret []string
		return ret
	}
	return *o.ImageUrls
}

// GetImageUrlsOk returns a tuple with the ImageUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWithManufacturer) GetImageUrlsOk() (*[]string, bool) {
	if o == nil || o.ImageUrls == nil {
		return nil, false
	}
	return o.ImageUrls, true
}

// HasImageUrls returns a boolean if a field has been set.
func (o *ProductWithManufacturer) HasImageUrls() bool {
	if o != nil && o.ImageUrls != nil {
		return true
	}

	return false
}

// SetImageUrls gets a reference to the given []string and assigns it to the ImageUrls field.
func (o *ProductWithManufacturer) SetImageUrls(v []string) {
	o.ImageUrls = &v
}

// GetManufacturer returns the Manufacturer field value if set, zero value otherwise.
func (o *ProductWithManufacturer) GetManufacturer() Manufacturer {
	if o == nil || o.Manufacturer == nil {
		var ret Manufacturer
		return ret
	}
	return *o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWithManufacturer) GetManufacturerOk() (*Manufacturer, bool) {
	if o == nil || o.Manufacturer == nil {
		return nil, false
	}
	return o.Manufacturer, true
}

// HasManufacturer returns a boolean if a field has been set.
func (o *ProductWithManufacturer) HasManufacturer() bool {
	if o != nil && o.Manufacturer != nil {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given Manufacturer and assigns it to the Manufacturer field.
func (o *ProductWithManufacturer) SetManufacturer(v Manufacturer) {
	o.Manufacturer = &v
}

func (o ProductWithManufacturer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.DescriptionShort != nil {
		toSerialize["description_short"] = o.DescriptionShort
	}
	if o.DescriptionLong != nil {
		toSerialize["description_long"] = o.DescriptionLong
	}
	if o.Price != nil {
		toSerialize["price"] = o.Price
	}
	if o.CategoryIds != nil {
		toSerialize["category_ids"] = o.CategoryIds
	}
	if o.ManufacturerId != nil {
		toSerialize["manufacturer_id"] = o.ManufacturerId
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StockCount != nil {
		toSerialize["stock_count"] = o.StockCount
	}
	if o.ImageUrls != nil {
		toSerialize["image_urls"] = o.ImageUrls
	}
	if o.Manufacturer != nil {
		toSerialize["manufacturer"] = o.Manufacturer
	}
	return json.Marshal(toSerialize)
}

type NullableProductWithManufacturer struct {
	value *ProductWithManufacturer
	isSet bool
}

func (v NullableProductWithManufacturer) Get() *ProductWithManufacturer {
	return v.value
}

func (v *NullableProductWithManufacturer) Set(val *ProductWithManufacturer) {
	v.value = val
	v.isSet = true
}

func (v NullableProductWithManufacturer) IsSet() bool {
	return v.isSet
}

func (v *NullableProductWithManufacturer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductWithManufacturer(val *ProductWithManufacturer) *NullableProductWithManufacturer {
	return &NullableProductWithManufacturer{value: val, isSet: true}
}

func (v NullableProductWithManufacturer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductWithManufacturer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


