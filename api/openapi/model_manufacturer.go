/*
GoCommerce

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Manufacturer struct for Manufacturer
type Manufacturer struct {
	// Compressed representation of ID
	Id *string `json:"id,omitempty"`
	Name string `json:"name"`
	WebsiteUrl *string `json:"website_url,omitempty"`
	ImageUrls *map[string]string `json:"image_urls,omitempty"`
}

// NewManufacturer instantiates a new Manufacturer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManufacturer(name string) *Manufacturer {
	this := Manufacturer{}
	this.Name = name
	return &this
}

// NewManufacturerWithDefaults instantiates a new Manufacturer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManufacturerWithDefaults() *Manufacturer {
	this := Manufacturer{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Manufacturer) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Manufacturer) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Manufacturer) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Manufacturer) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *Manufacturer) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Manufacturer) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Manufacturer) SetName(v string) {
	o.Name = v
}

// GetWebsiteUrl returns the WebsiteUrl field value if set, zero value otherwise.
func (o *Manufacturer) GetWebsiteUrl() string {
	if o == nil || o.WebsiteUrl == nil {
		var ret string
		return ret
	}
	return *o.WebsiteUrl
}

// GetWebsiteUrlOk returns a tuple with the WebsiteUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Manufacturer) GetWebsiteUrlOk() (*string, bool) {
	if o == nil || o.WebsiteUrl == nil {
		return nil, false
	}
	return o.WebsiteUrl, true
}

// HasWebsiteUrl returns a boolean if a field has been set.
func (o *Manufacturer) HasWebsiteUrl() bool {
	if o != nil && o.WebsiteUrl != nil {
		return true
	}

	return false
}

// SetWebsiteUrl gets a reference to the given string and assigns it to the WebsiteUrl field.
func (o *Manufacturer) SetWebsiteUrl(v string) {
	o.WebsiteUrl = &v
}

// GetImageUrls returns the ImageUrls field value if set, zero value otherwise.
func (o *Manufacturer) GetImageUrls() map[string]string {
	if o == nil || o.ImageUrls == nil {
		var ret map[string]string
		return ret
	}
	return *o.ImageUrls
}

// GetImageUrlsOk returns a tuple with the ImageUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Manufacturer) GetImageUrlsOk() (*map[string]string, bool) {
	if o == nil || o.ImageUrls == nil {
		return nil, false
	}
	return o.ImageUrls, true
}

// HasImageUrls returns a boolean if a field has been set.
func (o *Manufacturer) HasImageUrls() bool {
	if o != nil && o.ImageUrls != nil {
		return true
	}

	return false
}

// SetImageUrls gets a reference to the given map[string]string and assigns it to the ImageUrls field.
func (o *Manufacturer) SetImageUrls(v map[string]string) {
	o.ImageUrls = &v
}

func (o Manufacturer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.WebsiteUrl != nil {
		toSerialize["website_url"] = o.WebsiteUrl
	}
	if o.ImageUrls != nil {
		toSerialize["image_urls"] = o.ImageUrls
	}
	return json.Marshal(toSerialize)
}

type NullableManufacturer struct {
	value *Manufacturer
	isSet bool
}

func (v NullableManufacturer) Get() *Manufacturer {
	return v.value
}

func (v *NullableManufacturer) Set(val *Manufacturer) {
	v.value = val
	v.isSet = true
}

func (v NullableManufacturer) IsSet() bool {
	return v.isSet
}

func (v *NullableManufacturer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManufacturer(val *Manufacturer) *NullableManufacturer {
	return &NullableManufacturer{value: val, isSet: true}
}

func (v NullableManufacturer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManufacturer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


