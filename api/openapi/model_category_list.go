/*
GoCommerce

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CategoryList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CategoryList{}

// CategoryList struct for CategoryList
type CategoryList struct {
	Categories []Category `json:"categories"`
}

// NewCategoryList instantiates a new CategoryList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategoryList(categories []Category) *CategoryList {
	this := CategoryList{}
	this.Categories = categories
	return &this
}

// NewCategoryListWithDefaults instantiates a new CategoryList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategoryListWithDefaults() *CategoryList {
	this := CategoryList{}
	return &this
}

// GetCategories returns the Categories field value
func (o *CategoryList) GetCategories() []Category {
	if o == nil {
		var ret []Category
		return ret
	}

	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value
// and a boolean to check if the value has been set.
func (o *CategoryList) GetCategoriesOk() ([]Category, bool) {
	if o == nil {
		return nil, false
	}
	return o.Categories, true
}

// SetCategories sets field value
func (o *CategoryList) SetCategories(v []Category) {
	o.Categories = v
}

func (o CategoryList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CategoryList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["categories"] = o.Categories
	return toSerialize, nil
}

type NullableCategoryList struct {
	value *CategoryList
	isSet bool
}

func (v NullableCategoryList) Get() *CategoryList {
	return v.value
}

func (v *NullableCategoryList) Set(val *CategoryList) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryList) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryList(val *CategoryList) *NullableCategoryList {
	return &NullableCategoryList{value: val, isSet: true}
}

func (v NullableCategoryList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


