/*
 * GoCommerce
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ManufacturerAllOf struct for ManufacturerAllOf
type ManufacturerAllOf struct {
	Name *string `json:"name,omitempty"`
	WebsiteUrl *string `json:"website_url,omitempty"`
	// Signed URL pointing to the image
	ImageUrl *string `json:"image_url,omitempty"`
}

// NewManufacturerAllOf instantiates a new ManufacturerAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManufacturerAllOf() *ManufacturerAllOf {
	this := ManufacturerAllOf{}
	return &this
}

// NewManufacturerAllOfWithDefaults instantiates a new ManufacturerAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManufacturerAllOfWithDefaults() *ManufacturerAllOf {
	this := ManufacturerAllOf{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ManufacturerAllOf) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManufacturerAllOf) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ManufacturerAllOf) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ManufacturerAllOf) SetName(v string) {
	o.Name = &v
}

// GetWebsiteUrl returns the WebsiteUrl field value if set, zero value otherwise.
func (o *ManufacturerAllOf) GetWebsiteUrl() string {
	if o == nil || o.WebsiteUrl == nil {
		var ret string
		return ret
	}
	return *o.WebsiteUrl
}

// GetWebsiteUrlOk returns a tuple with the WebsiteUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManufacturerAllOf) GetWebsiteUrlOk() (*string, bool) {
	if o == nil || o.WebsiteUrl == nil {
		return nil, false
	}
	return o.WebsiteUrl, true
}

// HasWebsiteUrl returns a boolean if a field has been set.
func (o *ManufacturerAllOf) HasWebsiteUrl() bool {
	if o != nil && o.WebsiteUrl != nil {
		return true
	}

	return false
}

// SetWebsiteUrl gets a reference to the given string and assigns it to the WebsiteUrl field.
func (o *ManufacturerAllOf) SetWebsiteUrl(v string) {
	o.WebsiteUrl = &v
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise.
func (o *ManufacturerAllOf) GetImageUrl() string {
	if o == nil || o.ImageUrl == nil {
		var ret string
		return ret
	}
	return *o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManufacturerAllOf) GetImageUrlOk() (*string, bool) {
	if o == nil || o.ImageUrl == nil {
		return nil, false
	}
	return o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *ManufacturerAllOf) HasImageUrl() bool {
	if o != nil && o.ImageUrl != nil {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given string and assigns it to the ImageUrl field.
func (o *ManufacturerAllOf) SetImageUrl(v string) {
	o.ImageUrl = &v
}

func (o ManufacturerAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.WebsiteUrl != nil {
		toSerialize["website_url"] = o.WebsiteUrl
	}
	if o.ImageUrl != nil {
		toSerialize["image_url"] = o.ImageUrl
	}
	return json.Marshal(toSerialize)
}

type NullableManufacturerAllOf struct {
	value *ManufacturerAllOf
	isSet bool
}

func (v NullableManufacturerAllOf) Get() *ManufacturerAllOf {
	return v.value
}

func (v *NullableManufacturerAllOf) Set(val *ManufacturerAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableManufacturerAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableManufacturerAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManufacturerAllOf(val *ManufacturerAllOf) *NullableManufacturerAllOf {
	return &NullableManufacturerAllOf{value: val, isSet: true}
}

func (v NullableManufacturerAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManufacturerAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


