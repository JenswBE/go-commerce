/*
GoCommerce

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ConfigFeatures struct for ConfigFeatures
type ConfigFeatures struct {
	Categories ConfigFeaturesCategories `json:"categories"`
	Manufacturers ConfigFeaturesManufacturers `json:"manufacturers"`
	Products ConfigFeaturesProducts `json:"products"`
	Content ConfigFeaturesContent `json:"content"`
	Events ConfigFeaturesEvents `json:"events"`
}

// NewConfigFeatures instantiates a new ConfigFeatures object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigFeatures(categories ConfigFeaturesCategories, manufacturers ConfigFeaturesManufacturers, products ConfigFeaturesProducts, content ConfigFeaturesContent, events ConfigFeaturesEvents) *ConfigFeatures {
	this := ConfigFeatures{}
	this.Categories = categories
	this.Manufacturers = manufacturers
	this.Products = products
	this.Content = content
	this.Events = events
	return &this
}

// NewConfigFeaturesWithDefaults instantiates a new ConfigFeatures object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigFeaturesWithDefaults() *ConfigFeatures {
	this := ConfigFeatures{}
	return &this
}

// GetCategories returns the Categories field value
func (o *ConfigFeatures) GetCategories() ConfigFeaturesCategories {
	if o == nil {
		var ret ConfigFeaturesCategories
		return ret
	}

	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value
// and a boolean to check if the value has been set.
func (o *ConfigFeatures) GetCategoriesOk() (*ConfigFeaturesCategories, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Categories, true
}

// SetCategories sets field value
func (o *ConfigFeatures) SetCategories(v ConfigFeaturesCategories) {
	o.Categories = v
}

// GetManufacturers returns the Manufacturers field value
func (o *ConfigFeatures) GetManufacturers() ConfigFeaturesManufacturers {
	if o == nil {
		var ret ConfigFeaturesManufacturers
		return ret
	}

	return o.Manufacturers
}

// GetManufacturersOk returns a tuple with the Manufacturers field value
// and a boolean to check if the value has been set.
func (o *ConfigFeatures) GetManufacturersOk() (*ConfigFeaturesManufacturers, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Manufacturers, true
}

// SetManufacturers sets field value
func (o *ConfigFeatures) SetManufacturers(v ConfigFeaturesManufacturers) {
	o.Manufacturers = v
}

// GetProducts returns the Products field value
func (o *ConfigFeatures) GetProducts() ConfigFeaturesProducts {
	if o == nil {
		var ret ConfigFeaturesProducts
		return ret
	}

	return o.Products
}

// GetProductsOk returns a tuple with the Products field value
// and a boolean to check if the value has been set.
func (o *ConfigFeatures) GetProductsOk() (*ConfigFeaturesProducts, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Products, true
}

// SetProducts sets field value
func (o *ConfigFeatures) SetProducts(v ConfigFeaturesProducts) {
	o.Products = v
}

// GetContent returns the Content field value
func (o *ConfigFeatures) GetContent() ConfigFeaturesContent {
	if o == nil {
		var ret ConfigFeaturesContent
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *ConfigFeatures) GetContentOk() (*ConfigFeaturesContent, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *ConfigFeatures) SetContent(v ConfigFeaturesContent) {
	o.Content = v
}

// GetEvents returns the Events field value
func (o *ConfigFeatures) GetEvents() ConfigFeaturesEvents {
	if o == nil {
		var ret ConfigFeaturesEvents
		return ret
	}

	return o.Events
}

// GetEventsOk returns a tuple with the Events field value
// and a boolean to check if the value has been set.
func (o *ConfigFeatures) GetEventsOk() (*ConfigFeaturesEvents, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Events, true
}

// SetEvents sets field value
func (o *ConfigFeatures) SetEvents(v ConfigFeaturesEvents) {
	o.Events = v
}

func (o ConfigFeatures) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["categories"] = o.Categories
	}
	if true {
		toSerialize["manufacturers"] = o.Manufacturers
	}
	if true {
		toSerialize["products"] = o.Products
	}
	if true {
		toSerialize["content"] = o.Content
	}
	if true {
		toSerialize["events"] = o.Events
	}
	return json.Marshal(toSerialize)
}

type NullableConfigFeatures struct {
	value *ConfigFeatures
	isSet bool
}

func (v NullableConfigFeatures) Get() *ConfigFeatures {
	return v.value
}

func (v *NullableConfigFeatures) Set(val *ConfigFeatures) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigFeatures) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigFeatures) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigFeatures(val *ConfigFeatures) *NullableConfigFeatures {
	return &NullableConfigFeatures{value: val, isSet: true}
}

func (v NullableConfigFeatures) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigFeatures) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


