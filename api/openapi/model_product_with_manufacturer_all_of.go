/*
 * GoCommerce
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProductWithManufacturerAllOf struct for ProductWithManufacturerAllOf
type ProductWithManufacturerAllOf struct {
	Manufacturer *Manufacturer `json:"manufacturer,omitempty"`
}

// NewProductWithManufacturerAllOf instantiates a new ProductWithManufacturerAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductWithManufacturerAllOf() *ProductWithManufacturerAllOf {
	this := ProductWithManufacturerAllOf{}
	return &this
}

// NewProductWithManufacturerAllOfWithDefaults instantiates a new ProductWithManufacturerAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductWithManufacturerAllOfWithDefaults() *ProductWithManufacturerAllOf {
	this := ProductWithManufacturerAllOf{}
	return &this
}

// GetManufacturer returns the Manufacturer field value if set, zero value otherwise.
func (o *ProductWithManufacturerAllOf) GetManufacturer() Manufacturer {
	if o == nil || o.Manufacturer == nil {
		var ret Manufacturer
		return ret
	}
	return *o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWithManufacturerAllOf) GetManufacturerOk() (*Manufacturer, bool) {
	if o == nil || o.Manufacturer == nil {
		return nil, false
	}
	return o.Manufacturer, true
}

// HasManufacturer returns a boolean if a field has been set.
func (o *ProductWithManufacturerAllOf) HasManufacturer() bool {
	if o != nil && o.Manufacturer != nil {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given Manufacturer and assigns it to the Manufacturer field.
func (o *ProductWithManufacturerAllOf) SetManufacturer(v Manufacturer) {
	o.Manufacturer = &v
}

func (o ProductWithManufacturerAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Manufacturer != nil {
		toSerialize["manufacturer"] = o.Manufacturer
	}
	return json.Marshal(toSerialize)
}

type NullableProductWithManufacturerAllOf struct {
	value *ProductWithManufacturerAllOf
	isSet bool
}

func (v NullableProductWithManufacturerAllOf) Get() *ProductWithManufacturerAllOf {
	return v.value
}

func (v *NullableProductWithManufacturerAllOf) Set(val *ProductWithManufacturerAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableProductWithManufacturerAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableProductWithManufacturerAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductWithManufacturerAllOf(val *ProductWithManufacturerAllOf) *NullableProductWithManufacturerAllOf {
	return &NullableProductWithManufacturerAllOf{value: val, isSet: true}
}

func (v NullableProductWithManufacturerAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductWithManufacturerAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


