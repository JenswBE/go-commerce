/*
 * GoCommerce
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CategoryAllOf struct for CategoryAllOf
type CategoryAllOf struct {
	Name string `json:"name"`
	Description *string `json:"description,omitempty"`
	// Compressed representation of ID
	ParentId *string `json:"parent_id,omitempty"`
	// Should be sorted ascending by this column
	Order int64 `json:"order"`
	ProductIds *[]string `json:"product_ids,omitempty"`
	// Signed URL pointing to the image
	ImageUrl *string `json:"image_url,omitempty"`
}

// NewCategoryAllOf instantiates a new CategoryAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategoryAllOf(name string, order int64) *CategoryAllOf {
	this := CategoryAllOf{}
	this.Name = name
	this.Order = order
	return &this
}

// NewCategoryAllOfWithDefaults instantiates a new CategoryAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategoryAllOfWithDefaults() *CategoryAllOf {
	this := CategoryAllOf{}
	return &this
}

// GetName returns the Name field value
func (o *CategoryAllOf) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CategoryAllOf) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CategoryAllOf) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CategoryAllOf) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryAllOf) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CategoryAllOf) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CategoryAllOf) SetDescription(v string) {
	o.Description = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *CategoryAllOf) GetParentId() string {
	if o == nil || o.ParentId == nil {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryAllOf) GetParentIdOk() (*string, bool) {
	if o == nil || o.ParentId == nil {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *CategoryAllOf) HasParentId() bool {
	if o != nil && o.ParentId != nil {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *CategoryAllOf) SetParentId(v string) {
	o.ParentId = &v
}

// GetOrder returns the Order field value
func (o *CategoryAllOf) GetOrder() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Order
}

// GetOrderOk returns a tuple with the Order field value
// and a boolean to check if the value has been set.
func (o *CategoryAllOf) GetOrderOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Order, true
}

// SetOrder sets field value
func (o *CategoryAllOf) SetOrder(v int64) {
	o.Order = v
}

// GetProductIds returns the ProductIds field value if set, zero value otherwise.
func (o *CategoryAllOf) GetProductIds() []string {
	if o == nil || o.ProductIds == nil {
		var ret []string
		return ret
	}
	return *o.ProductIds
}

// GetProductIdsOk returns a tuple with the ProductIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryAllOf) GetProductIdsOk() (*[]string, bool) {
	if o == nil || o.ProductIds == nil {
		return nil, false
	}
	return o.ProductIds, true
}

// HasProductIds returns a boolean if a field has been set.
func (o *CategoryAllOf) HasProductIds() bool {
	if o != nil && o.ProductIds != nil {
		return true
	}

	return false
}

// SetProductIds gets a reference to the given []string and assigns it to the ProductIds field.
func (o *CategoryAllOf) SetProductIds(v []string) {
	o.ProductIds = &v
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise.
func (o *CategoryAllOf) GetImageUrl() string {
	if o == nil || o.ImageUrl == nil {
		var ret string
		return ret
	}
	return *o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryAllOf) GetImageUrlOk() (*string, bool) {
	if o == nil || o.ImageUrl == nil {
		return nil, false
	}
	return o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *CategoryAllOf) HasImageUrl() bool {
	if o != nil && o.ImageUrl != nil {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given string and assigns it to the ImageUrl field.
func (o *CategoryAllOf) SetImageUrl(v string) {
	o.ImageUrl = &v
}

func (o CategoryAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ParentId != nil {
		toSerialize["parent_id"] = o.ParentId
	}
	if true {
		toSerialize["order"] = o.Order
	}
	if o.ProductIds != nil {
		toSerialize["product_ids"] = o.ProductIds
	}
	if o.ImageUrl != nil {
		toSerialize["image_url"] = o.ImageUrl
	}
	return json.Marshal(toSerialize)
}

type NullableCategoryAllOf struct {
	value *CategoryAllOf
	isSet bool
}

func (v NullableCategoryAllOf) Get() *CategoryAllOf {
	return v.value
}

func (v *NullableCategoryAllOf) Set(val *CategoryAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryAllOf(val *CategoryAllOf) *NullableCategoryAllOf {
	return &NullableCategoryAllOf{value: val, isSet: true}
}

func (v NullableCategoryAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


