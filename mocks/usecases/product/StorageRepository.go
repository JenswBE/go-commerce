// Code generated by mockery v2.12.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// StorageRepository is an autogenerated mock type for the StorageRepository type
type StorageRepository struct {
	mock.Mock
}

// DeleteFile provides a mock function with given fields: filename
func (_m *StorageRepository) DeleteFile(filename string) error {
	ret := _m.Called(filename)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(filename)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SaveFile provides a mock function with given fields: filename, content
func (_m *StorageRepository) SaveFile(filename string, content []byte) error {
	ret := _m.Called(filename, content)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, []byte) error); ok {
		r0 = rf(filename, content)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewStorageRepository creates a new instance of StorageRepository. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewStorageRepository(t testing.TB) *StorageRepository {
	mock := &StorageRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
