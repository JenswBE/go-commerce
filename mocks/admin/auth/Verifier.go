// Code generated by mockery v2.12.1. DO NOT EDIT.

package mocks

import (
	context "context"
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// Verifier is an autogenerated mock type for the Verifier type
type Verifier struct {
	mock.Mock
}

// ValidateCredentialsWithRoles provides a mock function with given fields: ctx, username, password, roles
func (_m *Verifier) ValidateCredentialsWithRoles(ctx context.Context, username string, password string, roles []string) (string, error) {
	ret := _m.Called(ctx, username, password, roles)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, string, string, []string) string); ok {
		r0 = rf(ctx, username, password, roles)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string, []string) error); ok {
		r1 = rf(ctx, username, password, roles)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewVerifier creates a new instance of Verifier. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewVerifier(t testing.TB) *Verifier {
	mock := &Verifier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
