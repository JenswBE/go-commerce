name: Build and publish
on:
  push:
    branches: [main]
    tags:
      - "*"

env:
  GO_VERSION: "^1.16.6" # Also update Dockerfile when bumping
  DOCKER_HUB_USER: jenswbebot
  DOCKER_HUB_REPO: jenswbe/go-commerce

jobs:
  build-and-publish:
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgres:13-alpine # Keep in sync with Docker Compose file
        env:
          POSTGRES_USER: e2e
          POSTGRES_PASSWORD: e2e
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Derive docker_tag
        id: vars
        shell: python
        run: |
          import os
          tag = os.environ['GITHUB_REF'].split('/').pop()
          if tag == 'main':
            tag = 'latest'
          print(f"::set-output name=docker_tag::{tag}")

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

      - name: Run coverage
        run: |
          # Settings
          export AUTH_TYPE=NONE
          export DATABASE_DEFAULT_USER=e2e
          export DATABASE_DEFAULT_PASSWORD=e2e
          export DATABASE_DEFAULT_DATABASE=e2e

          # Run service
          go run ./... &
          sleep 5s

          # Run unit tests
          go test -tags e2e -coverprofile=coverage.out -covermode=atomic ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.DOCKER_HUB_REPO }}:${{ steps.vars.outputs.docker_tag }}

      - name: Update repo description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ env.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: ${{ env.DOCKER_HUB_REPO }}
