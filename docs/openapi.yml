openapi: "3.0.2"
info:
  title: GoCommerce
  version: "1.0"

servers:
  - url: http://localhost:8090

paths:
  /public/categories/:
    get:
      operationId: public_list_categories
      description: List categories
      tags: ["Categories"]
      security: []
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryList"

  /public/categories/{id}/:
    parameters:
      - $ref: "#/components/parameters/pathID"
    get:
      operationId: public_get_category
      description: Get category details
      tags: ["Categories"]
      security: []
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"

  /admin/categories/:
    get:
      operationId: admin_list_categories
      description: List categories
      tags: ["Categories"]
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryList"
    post:
      operationId: admin_add_category
      description: Add category
      tags: ["Categories"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"

  /admin/categories/{id}/:
    parameters:
      - $ref: "#/components/parameters/pathID"
    get:
      operationId: admin_get_category
      description: Get category details
      tags: ["Categories"]
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
    put:
      operationId: admin_update_category
      description: Update category
      tags: ["Categories"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
    delete:
      operationId: admin_delete_category
      description: Delete category
      tags: ["Categories"]
      responses:
        "204":
          description: No Content

  /admin/categories/{id}/image:
    parameters:
      - $ref: "#/components/parameters/pathID"
    put:
      operationId: admin_upsert_category_image
      description: Upsert image
      tags: ["Categories"]
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Image"
    delete:
      operationId: admin_delete_category_image
      description: Delete image
      tags: ["Categories"]
      responses:
        "204":
          description: No Content

  /public/manufacturers/:
    get:
      operationId: public_list_manufacturers
      description: List manufacturers
      tags: ["Manufacturers"]
      security: []
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManufacturerList"

  /public/manufacturers/{id}/:
    parameters:
      - $ref: "#/components/parameters/pathID"
    get:
      operationId: public_get_manufacturer
      description: Get manufacturer details
      tags: ["Manufacturers"]
      security: []
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Manufacturer"

  /admin/manufacturers/:
    get:
      operationId: admin_list_manufacturers
      description: List manufacturers
      tags: ["Manufacturers"]
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManufacturerList"
    post:
      operationId: admin_add_manufacturer
      description: Add manufacturer
      tags: ["Manufacturers"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Manufacturer"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Manufacturer"

  /admin/manufacturers/{id}/:
    parameters:
      - $ref: "#/components/parameters/pathID"
    get:
      operationId: admin_get_manufacturer
      description: Get manufacturer details
      tags: ["Manufacturers"]
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Manufacturer"
    put:
      operationId: admin_update_manufacturer
      description: Update manufacturer
      tags: ["Manufacturers"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Manufacturer"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Manufacturer"
    delete:
      operationId: admin_delete_manufacturer
      description: Delete manufacturer
      tags: ["Manufacturers"]
      responses:
        "204":
          description: No Content

  /admin/manufacturers/{id}/image:
    parameters:
      - $ref: "#/components/parameters/pathID"
    put:
      operationId: admin_upsert_manufacturer_image
      description: Upsert image
      tags: ["Manufacturers"]
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Image"
    delete:
      operationId: admin_delete_manufacturer_image
      description: Delete image
      tags: ["Manufacturers"]
      responses:
        "204":
          description: No Content

  /public/products/:
    get:
      operationId: public_list_products
      description: List products
      tags: ["Products"]
      security: []
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductList"

  /public/products/{id}/:
    parameters:
      - $ref: "#/components/parameters/pathID"
    get:
      operationId: public_get_product
      description: Get product details
      tags: ["Products"]
      security: []
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductWithManufacturer"

  /admin/products/:
    get:
      operationId: admin_list_products
      description: List products
      tags: ["Products"]
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductList"
    post:
      operationId: admin_add_product
      description: Add product
      tags: ["Products"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"

  /admin/products/{id}/:
    parameters:
      - $ref: "#/components/parameters/pathID"
    get:
      operationId: admin_get_product
      description: Get product details
      tags: ["Products"]
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductWithManufacturer"
    put:
      operationId: admin_update_product
      description: Update product
      tags: ["Products"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
    delete:
      operationId: admin_delete_product
      description: Delete product
      tags: ["Products"]
      responses:
        "204":
          description: No Content

  /admin/products/{id}/images:
    parameters:
      - $ref: "#/components/parameters/pathID"
      - $ref: "#/components/parameters/queryImgHeight"
      - $ref: "#/components/parameters/queryImgResize"
      - $ref: "#/components/parameters/queryImgWidth"
    get:
      operationId: admin_list_product_images
      description: Get product images
      tags: ["Products"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageList"
    post:
      operationId: admin_add_product_images
      description: Add product images
      tags: ["Products"]
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  type: array
                  items:
                    type: string
                    format: binary
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageList"

  /admin/products/{id}/images/{image_id}:
    parameters:
      - $ref: "#/components/parameters/pathID"
      - $ref: "#/components/parameters/pathImageID"
    put:
      operationId: admin_update_product_image
      description: >-
        Update product image.
        In case the new order matches another image, the orders are swapped.
        Therefore, this call will return all impacted images (1 or 2).
        First the image on which the request was called and optionally second the swapped image.
      tags: ["Products"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Image"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageList"
    delete:
      operationId: admin_delete_product_image
      description: Delete product image
      tags: ["Products"]
      responses:
        "204":
          description: No Content

components:
  parameters:
    pathID:
      name: id
      in: path
      description: ID
      required: true
      schema:
        $ref: "#/components/schemas/ShortID"

    pathImageID:
      name: image_id
      in: path
      description: Image ID
      required: true
      schema:
        $ref: "#/components/schemas/ShortID"

    queryImgHeight:
      name: img_h
      in: query
      description: Image height
      required: false
      schema:
        type: integer
        format: int64
        example: 200

    queryImgResize:
      name: img_r
      in: query
      description: Image resize mode
      required: false
      schema:
        type: string
        default: FIT
        enum:
          - FILL
          - FIT

    queryImgWidth:
      name: img_w
      in: query
      description: Image width
      required: false
      schema:
        type: integer
        format: int64
        example: 300

  schemas:
    Category:
      allOf:
        - $ref: "#/components/schemas/Header"
        - type: object
          properties:
            name:
              type: string
              example: Makeup & Cosmetica
            description:
              type: string
            parent_id:
              $ref: "#/components/schemas/ShortID"
            order:
              description: Should be sorted ascending by this column
              type: integer
              format: int64
            product_ids:
              type: array
              items:
                type: string
                format: uuid
              readOnly: True
            image_url:
              $ref: "#/components/schemas/ImageUrl"
          required:
            - name
            - order

    CategoryList:
      type: object
      required:
        - categories
      properties:
        categories:
          type: array
          items:
            $ref: "#/components/schemas/Category"

    Header:
      type: object
      properties:
        id:
          type: string
          description: Compressed representation of ID
          example: "AneTxNh7GB5uD2HoXvwF2E"
          readOnly: True

    HeaderTimestamped:
      allOf:
        - $ref: "#/components/schemas/Header"
        - type: object
          properties:
            created_at:
              type: string
              format: date-time
              example: "2020-12-23T10:00:00Z"
              readOnly: True
            updated_at:
              type: string
              format: date-time
              example: "2020-12-24T11:30:00Z"
              readOnly: True

    Image:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        ext:
          type: string
          description: Extension of the image
          example: png
          readOnly: true
        url:
          $ref: "#/components/schemas/ImageUrl"
        order:
          description: Should be sorted ascending by this column
          type: integer
          format: int64
      required:
        - id
        - ext
        - url
        - order

    ImageUrl:
      type: string
      description: Signed URL pointing to the image
      example: "https://images.jensw.be/.../fill/300/400/.../anBn.png"
      readOnly: true

    ImageList:
      type: object
      required:
        - images
      properties:
        images:
          type: array
          items:
            $ref: "#/components/schemas/Image"

    Manufacturer:
      required:
        - name
      allOf:
        - $ref: "#/components/schemas/Header"
        - type: object
          properties:
            name:
              type: string
              example: Bjoetiek Y
            website_url:
              type: string
              format: url
              example: https://bjoetiek-y.be
            image_url:
              $ref: "#/components/schemas/ImageUrl"

    ManufacturerList:
      type: object
      required:
        - manufacturers
      properties:
        manufacturers:
          type: array
          items:
            $ref: "#/components/schemas/Manufacturer"

    Product:
      allOf:
        - $ref: "#/components/schemas/HeaderTimestamped"
        - type: object
          properties:
            name:
              type: string
              example: Gezichtsmasker
            description_short:
              type: string
            description_long:
              type: string
            price:
              description: Price in cents
              type: integer
              format: int64
              example: 1500
            category_ids:
              type: array
              items:
                type: string
                format: uuid
            manufacturer_id:
              type: string
              format: uuid
            status:
              type: string
              enum:
                - AVAILABLE
                - ARCHIVED
            stock_count:
              type: integer
              format: int64
            image_urls:
              type: array
              items:
                $ref: "#/components/schemas/ImageUrl"
              readOnly: true

    ProductWithManufacturer:
      allOf:
        - $ref: "#/components/schemas/Product"
        - type: object
          properties:
            manufacturer:
              $ref: "#/components/schemas/Manufacturer"

    ProductList:
      type: object
      required:
        - products
      properties:
        products:
          type: array
          items:
            $ref: "#/components/schemas/Product"

    ShortID:
      type: string
      description: Compressed representation of ID
      example: "AneTxNh7GB5uD2HoXvwF2E"

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

security:
  - basicAuth: []
