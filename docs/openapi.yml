openapi: "3.0.2"
info:
  title: GoCommerce
  version: "1.0"

servers:
  - url: http://localhost:8090

paths:
  /public/categories/:
    get:
      description: List categories
      tags: ["Categories"]
      security: []
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"

  /public/categories/{id}/:
    parameters:
      - $ref: "#/components/parameters/pathID"

    get:
      description: Get category details
      tags: ["Categories"]
      security: []
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"

  /admin/categories/:
    get:
      description: List categories
      tags: ["Categories"]
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"

    post:
      description: Add category
      tags: ["Categories"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"

  /admin/categories/{id}/:
    parameters:
      - $ref: "#/components/parameters/pathID"

    get:
      description: Get category details
      tags: ["Categories"]
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"

    put:
      description: Update category
      tags: ["Categories"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"

    delete:
      description: Delete category
      tags: ["Categories"]
      responses:
        "204":
          description: OK

  /admin/categories/{id}/image:
    parameters:
      - $ref: "#/components/parameters/pathID"

    put:
      description: Upsert image
      tags: ["Categories"]
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Image"

    delete:
      description: Delete image
      tags: ["Categories"]
      responses:
        "204":
          description: No Content

  /public/manufacturers/:
    get:
      description: List manufacturers
      tags: ["Manufacturers"]
      security: []
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Manufacturer"

  /public/manufacturers/{id}/:
    parameters:
      - $ref: "#/components/parameters/pathID"

    get:
      description: Get manufacturer details
      tags: ["Manufacturers"]
      security: []
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Manufacturer"

  /admin/manufacturers/:
    get:
      description: List manufacturers
      tags: ["Manufacturers"]
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Manufacturer"

    post:
      description: Add manufacturer
      tags: ["Manufacturers"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Manufacturer"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Manufacturer"

  /admin/manufacturers/{id}/:
    parameters:
      - $ref: "#/components/parameters/pathID"

    get:
      description: Get manufacturer details
      tags: ["Manufacturers"]
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Manufacturer"

    put:
      description: Update manufacturer
      tags: ["Manufacturers"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Manufacturer"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Manufacturer"

    delete:
      description: Delete manufacturer
      tags: ["Manufacturers"]
      responses:
        "204":
          description: No Content

  /admin/manufacturers/{id}/image:
    parameters:
      - $ref: "#/components/parameters/pathID"

    put:
      description: Upsert image
      tags: ["Manufacturers"]
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Image"

    delete:
      description: Delete image
      tags: ["Manufacturers"]
      responses:
        "204":
          description: No Content

  /public/products/:
    get:
      description: List products
      tags: ["Products"]
      security: []
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"

  /public/products/{id}/:
    parameters:
      - $ref: "#/components/parameters/pathID"

    get:
      description: Get product details
      tags: ["Products"]
      security: []
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Product"
                  - type: object
                    properties:
                      manufacturer:
                        $ref: "#/components/schemas/Manufacturer"

  /admin/products/:
    get:
      description: List products
      tags: ["Products"]
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"

    post:
      description: Add product
      tags: ["Products"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"

  /admin/products/{id}/:
    parameters:
      - $ref: "#/components/parameters/pathID"

    get:
      description: Get product details
      tags: ["Products"]
      parameters:
        - $ref: "#/components/parameters/queryImgHeight"
        - $ref: "#/components/parameters/queryImgResize"
        - $ref: "#/components/parameters/queryImgWidth"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Product"
                  - type: object
                    properties:
                      manufacturer:
                        $ref: "#/components/schemas/Manufacturer"

    put:
      description: Update product
      tags: ["Products"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"

    delete:
      description: Delete product
      tags: ["Products"]
      responses:
        "204":
          description: OK

  /admin/products/{id}/images:
    parameters:
      - $ref: "#/components/parameters/pathID"
      - $ref: "#/components/parameters/queryImgHeight"
      - $ref: "#/components/parameters/queryImgResize"
      - $ref: "#/components/parameters/queryImgWidth"

    get:
      description: Get images
      tags: ["Products"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Image"

    post:
      description: Add images
      tags: ["Products"]
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  type: array
                  items:
                    type: string
                    format: binary
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Image"

  /admin/products/{id}/images/{image_id}:
    parameters:
      - $ref: "#/components/parameters/pathID"
      - $ref: "#/components/parameters/pathImageID"

    put:
      description: Update image
      tags: ["Products"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Image"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Image"

    delete:
      description: Delete image
      tags: ["Products"]
      responses:
        "204":
          description: OK

components:
  parameters:
    pathID:
      name: id
      in: path
      description: ID
      required: true
      schema:
        $ref: "#/components/schemas/ShortID"
    
    pathImageID:
      name: image_id
      in: path
      description: Image ID
      required: true
      schema:
        $ref: "#/components/schemas/ShortID"
    
    queryImgHeight:
      name: img_h
      in: query
      description: Image height
      required: false
      schema:
        type: integer
        format: int64
        example: 200
    
    queryImgResize:
      name: img_r
      in: query
      description: Image resize mode
      required: false
      schema:
        type: string
        default: fit
        enum:
          - fill
          - fit

    queryImgWidth:
      name: img_w
      in: query
      description: Image width
      required: false
      schema:
        type: integer
        format: int64
        example: 300

  schemas:
    Category:
      allOf:
        - $ref: "#/components/schemas/Header"
        - type: object
          properties:
            name:
              type: string
              example: Makeup & Cosmetica
            description:
              type: string
            parent_id:
              $ref: "#/components/schemas/ShortID"
            order:
              description: Should be sorted ascending by this column
              type: integer
              format: int64
            product_ids:
              type: array
              items:
                type: string
                format: uuid
              readOnly: True
            image_url:
              $ref: "#/components/schemas/ImageUrl"
          required:
            - name
            - order

    Header:
      type: object
      properties:
        id:
          type: string
          description: Compressed representation of ID
          example: "AneTxNh7GB5uD2HoXvwF2E"
          readOnly: True

    HeaderTimestamped:
      allOf:
        - $ref: "#/components/schemas/Header"
        - type: object
          properties:
            created_at:
              type: string
              format: date-time
              example: "2020-12-23T10:00:00Z"
              readOnly: True
            updated_at:
              type: string
              format: date-time
              example: "2020-12-24T11:30:00Z"
              readOnly: True

    Image:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        ext:
          type: string
          description: Extension of the image
          example: png
          readOnly: true
        url:
          $ref: "#/components/schemas/ImageUrl"
        order:
          description: Should be sorted ascending by this column
          type: integer
          format: int64

    ImageUrl:
      type: string
      description: Signed URL pointing to the image
      example: "https://images.jensw.be/.../fill/300/400/.../anBn.png"
      readOnly: true

    Manufacturer:
      allOf:
        - $ref: "#/components/schemas/Header"
        - type: object
          properties:
            name:
              type: string
              example: Bjoetiek Y
            website_url:
              type: string
              format: url
              example: https://bjoetiek-y.be
            image_url:
              $ref: "#/components/schemas/ImageUrl"

    Product:
      allOf:
        - $ref: "#/components/schemas/HeaderTimestamped"
        - type: object
          properties:
            name:
              type: string
              example: Gezichtsmasker
            description_short:
              type: string
            description_long:
              type: string
            price:
              description: Price in cents
              type: integer
              format: int64
              example: 1500
            category_ids:
              type: array
              items:
                type: string
                format: uuid
            manufacturer_id:
              type: string
              format: uuid
            status:
              type: string
              enum:
                - AVAILABLE
                - ARCHIVED
            stock_count:
              type: integer
              format: int64
            image_urls:
              type: array
              items:
                $ref: "#/components/schemas/ImageUrl"
              readOnly: true

    ShortID:
      type: string
      description: Compressed representation of ID
      example: "AneTxNh7GB5uD2HoXvwF2E"

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

security:
  - basicAuth: []
