version: "2.4"

services:
  # backend:
  #   build: .
  #   ports:
  #     - "8090:8090"
  #   volumes:
  #     - "./config.yml:/go-commerce/config.yml"
  #   environment:
  #     - "DATABASE_HOST=db"

  db:
    image: postgres:13-alpine
    environment:
      - "POSTGRES_USER=go_commerce"
      - "POSTGRES_PASSWORD=go_commerce"
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - "./postgres-init-00-structure.sh:/docker-entrypoint-initdb.d/00-init-structure.sh"
      - "./postgres-init-10-data.sh:/docker-entrypoint-initdb.d/10-init-data.sh"

  adminer:
    image: adminer
    ports:
      - "127.0.0.1:8032:8080"

  imgproxy:
    image: darthsim/imgproxy
    environment:
      - "IMGPROXY_KEY=8f2fd7184ad28abe1b2cd3b6bb0f74dff4765659260f72eff6bea4b9c065bb7d64cbe75e4cd89ca98693f6c24fd670d50b1556b1b307700c7bd4a7dc9e66a72d"
      - "IMGPROXY_SALT=efab808e2a395eb3032e7906bdc83efebe216a4fc05a833690b7f48b5f39c8ba78f651513beb08056510e71eeea951b9ce7fb50ce6dbac372ab1d8603d8ee9d4"
      - "IMGPROXY_LOCAL_FILESYSTEM_ROOT=/images"
      - "IMGPROXY_MAX_SRC_RESOLUTION=64"
    ports:
      - "127.0.0.1:8091:8080"
    volumes:
      - "./files/images:/images:ro"
